<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set Variables
grav            = 5;
jump_number     = 3; 
jump_current    = 0; 
ysp             = 0;
timer           = 0;

jump_start_y    = x; 
canShoot        = 1; 

x_spd = 1; 
x_dir = 1;
global.flipParticle = 0;
sameDir = x_dir;

grav_dir = 0; 
projectile_speed = 5; 

instance_create(x,y,obj_stamina_bar);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.stamina_disable = false;

obj_stamina_bar.brightness=200;
obj_stamina_bar.glow=55;
obj_stamina_bar.glow_speed=1; 

obj_stamina_bar.sprite_index = 0; 
obj_stamina_bar.txt_stamina_restored = true; 
obj_stamina_bar.txt_stamina_alpha = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 3 * 0.01 * obj_init.frame_delta;

/// RUNNER CONTINUOUS
x += (x_spd * 3 * obj_init.frame_delta);

if (x_dir = 1) grav_dir = 180;
if (x_dir = -1) grav_dir = 0;
projectile_speed = 5 * obj_init.frame_delta;

if(((keyboard_check(vk_shift)) &amp;&amp; (global.stamina &gt; 0)) &amp;&amp; (global.stamina_disable = false)){
    x += (x_spd * 7 * obj_init.frame_delta);
    ///part_type_gravity(obj_first_particle.first_particle,0.05,grav_dir); 
    projectile_speed += 9 * obj_init.frame_delta;
    global.stamina -= 2;
    if (global.stamina &lt;= 0) {global.stamina_disable = true;}
    
    if (global.stamina_disable = true) {
    obj_stamina_bar.brightness=30;
    obj_stamina_bar.glow=20;
    obj_stamina_bar.glow_speed=0;
    obj_stamina_bar.sprite_index = 1; 
    }
}

if((global.stamina_disable = true) &amp;&amp; (global.stamina &gt;= global.max_stamina-1)){
    alarm[0]= 1 * obj_init.frame_delta;
    obj_stamina_bar.txt_stamina_alpha = 0;
} if (obj_stamina_bar.txt_stamina_alpha &gt;= 0 &amp;&amp; obj_stamina_bar.txt_stamina_alpha &lt;= 1){ 
    obj_stamina_bar.txt_stamina_alpha += 0.01; 
}

if(!keyboard_check(vk_shift)) or (global.stamina_disable = true){
    global.stamina += 2;
}

sameDir = x_dir; 
if((keyboard_check(vk_left))){
    x_spd = -1;
    image_xscale=-1;
    ////part_type_gravity(obj_first_particle.first_particle,0.02,0);
    global.flipParticle = 1; 
    x_dir = -1;
}

if((keyboard_check(vk_right))){
    x_spd = 1;
    image_xscale=1;
    ///part_type_gravity(obj_first_particle.first_particle,0.02,180);
    global.flipParticle = 0;
    x_dir = 1;
}

if (sameDir != x_dir){
    ///part_particles_clear(obj_first_particle.FirstParticleSystem);
} 

/// UP AND DOWN
if((keyboard_check(vk_up)) &amp;&amp; (jump_current = 0)){
    y -= 3 * obj_init.frame_delta;
}

if((keyboard_check(vk_down)) &amp;&amp; (jump_current = 0)){
    y += 3 * obj_init.frame_delta;
}

/// DOUBLE JUMP CODE

if (timer &gt; -3) {timer = timer - (1*obj_init.frame_delta);}

if(timer &lt;= 0) {   
    jump_current = 0;
} 

if(keyboard_check_released(vk_space) &amp;&amp; jump_current &lt;= 0) {
    jump_start_y = y; 
    ysp = -5;
    jump_current = 1;
    timer = 35;
}
        
if((timer &gt; 0) &amp;&amp; (jump_current = 1)) {
        
        if(keyboard_check_pressed(vk_space)) {
            ysp = -7;
            timer = timer + 20; 
            jump_current = 2;
        } 
}           
            
if (timer &gt; 0) {
        
        if((timer &lt;= 13) &amp;&amp; jump_current = 1){  // first jump
            ysp = 3;  
            
            if ((y &lt; (jump_start_y-3)) &amp;&amp; (ysp &gt; 0)){
            ysp = 3;
            timer = timer + 1; 
            }           
        }
        
        if((timer &lt;= 15) &amp;&amp; jump_current = 2){  // second jump
            ysp = 5;
                if ((y &lt; (jump_start_y-5)) &amp;&amp; (ysp &gt; 0)){
                    ysp = 5;
                    timer = timer + 1; 
                }  
        }
               
        if ((y &gt; jump_start_y) &amp;&amp; (ysp &gt; 0)) {
            timer = 0; 
            ysp = 0; 
            y = jump_start_y;
        } 
        
        y += ysp * obj_init.frame_delta;
}

// GRAVITY
if((!place_meeting(x, y + ysp, obj_solid)) &amp;&amp; (jump_current &lt;= 0)){
    y += 3 * obj_init.frame_delta;;
}

// SHOOT FIREBALL
if ((canShoot &gt;= 1)  &amp;&amp; (global.stamina &gt; 0)) {
    if(keyboard_check(ord('X'))){
        x_dir_perm = x_dir;;
        instance_create(x,y,obj_fireball); 
        canShoot = -60;
    }
}
    else {
        canShoot += 5; 
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);    
draw_set_alpha(1);
draw_text(x-250, y-250,(fps_real));
draw_text(x-250, y-270,(obj_init.frame_delta));
draw_self()
draw_text(x-50, y-50,("timer: " + string(timer)));
draw_text(x-50, y-70,("jump current: " + string(jump_current)));
draw_text(x-50, y - 90,("stamina alpha: " + string(obj_stamina_bar.txt_stamina_alpha))); 
///draw_text(x-50, y-50,("other: " + jump_current));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
